@using GestorDocumental.Business.Interfaces
@using GestorDocumental.Data.Entities
@inject ICursoService CursoService

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">GestorDocumental</a>
    </div>
</div>

<input type="checkbox" title="Navigation menu" class="navbar-toggler" />

<div class="nav-scrollable">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="/" Match="NavLinkMatch.All">
                <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Home
            </NavLink>
        </div>

        @if (cursos != null && cursos.Any())
        {
            @foreach (var curso in cursos)
            {
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="@($"/{curso.CodigoCurso}")">
                        <span class="bi bi-book-fill-nav-menu" aria-hidden="true"></span> @curso.Descripcion
                    </NavLink>
                </div>
            }
        }
        else
        {
            <div class="nav-item px-3 text-muted">
                No hay cursos disponibles.
            </div>
        }
    </nav>
</div>


@code {
    private List<Curso> cursos = new();

    protected override async Task OnInitializedAsync()
    {
        cursos = (await CursoService.ObtenerCursosAsync()).ToList();
    }
}
