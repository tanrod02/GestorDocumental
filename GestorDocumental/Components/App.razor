<!DOCTYPE html>
<html lang="es">

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <base href="/" />
    <link rel="stylesheet" href="bootstrap/bootstrap.min.css" />
    <link rel="stylesheet" href="app.css" />
    <link rel="stylesheet" href="GestorDocumental.styles.css" />
    <link rel="icon" type="image/png" href="favicon.png" />
    <link href="_content/Radzen.Blazor/css/default.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css">

    


    <HeadOutlet />
</head>

<body>

    <RadzenDialogProvider>
    <Routes />
    </RadzenDialogProvider>


    <RadzenNotification />
    <RadzenContextMenu />

   
    <script src="_framework/blazor.web.js"></script>
    <script src="script.js"></script>
   @*  <script src="~/scripts/verDocumento.js"></script>
    <script src="~/scripts/script.js"></script> *@
    <script src="~/scripts/drag&drop.js"></script>
    <script src="_content/Radzen.Blazor/Radzen.Blazor.js"></script>
    
    <script>
                function abrirPdfDesdeBytes(base64Data) {
            const byteCharacters = atob(base64Data);
            const byteNumbers = new Array(byteCharacters.length);
            for (let i = 0; i < byteCharacters.length; i++) {
                byteNumbers[i] = byteCharacters.charCodeAt(i);
            }
            const byteArray = new Uint8Array(byteNumbers);
            const file = new Blob([byteArray], { type: 'application/pdf' });
            const fileURL = URL.createObjectURL(file);
            window.open(fileURL, '_blank');
        }

                function base64ToBlob(base64, mime) {
            const byteCharacters = atob(base64);
            const byteNumbers = new Array(byteCharacters.length);
            for (let i = 0; i < byteCharacters.length; i++) {
                byteNumbers[i] = byteCharacters.charCodeAt(i);
            }
            const byteArray = new Uint8Array(byteNumbers);
            return new Blob([byteArray], { type: mime });
        }

             window.mostrarTexto = function (texto) {
            var newWindow = window.open('', '_blank');
            newWindow.document.write('<pre>' + texto + '</pre>');
        };

        // Función para mostrar imágenes en una nueva ventana
        // Aquí se asume que la imagen es PNG, pero puedes parametrizarlo según tus necesidades.
        window.mostrarImagen = function (base64Data) {
            var fileURL = "data:image/png;base64," + base64Data;
            var newWindow = window.open('', '_blank');
            newWindow.document.write('<img src="' + fileURL + '" alt="Imagen" />');
        };

        // Función para forzar la descarga del archivo (por ejemplo, Word o cualquier otro)
        window.descargarArchivo = function (base64Data, mime, fileName) {
            var file = base64ToBlob(base64Data, mime);
            var fileURL = URL.createObjectURL(file);
            var a = document.createElement('a');
            a.href = fileURL;
            a.download = fileName;
            document.body.appendChild(a);
            a.click();
            document.body.removeChild(a);
        };

    </script>




</body>

</html>
