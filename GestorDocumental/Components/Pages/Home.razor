@page "/"
@page "/{CodigoCurso:int}"
@using GestorDocumental.Business.Interfaces
@using GestorDocumental.Data.Entities
@using Radzen
@using Microsoft.AspNetCore.Components.Forms

@inject IArchivoService ArchivoService
@inject ContextMenuService ContextMenuService

<PageTitle>Documentos</PageTitle>

<h1>Documentos</h1>

@if (archivos == null)
{
    <p>Cargando archivos...</p>
}
else if (!archivos.Any())
{
    <p>Bienvenido. Selecciona el curso para ver los documentos.</p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Nombre</th>
                <th>Tipo</th>
                <th>Fecha Alta</th>
                <th>Etiquetas</th>
                <th>Visible</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var archivo in archivos)
            {
                <tr @contextmenu="(e => ShowContextMenu(e, archivo))">
                    <td>@archivo.NombreArchivo</td>
                    <td>@archivo.Tipo</td>
                    <td>@archivo.FechaAlta.ToString("dd/MM/yyyy")</td>
                    <td>@archivo.Etiquetas</td>
                    <td>@(archivo.Visible ?? false ? "Sí" : "No")</td>
                </tr>
            }
        </tbody>
    </table>
}

<RadzenContextMenu />

@code {
    [Parameter] public int CodigoCurso { get; set; }
    private IEnumerable<Archivo> archivos = new List<Archivo>();


    protected override async Task OnParametersSetAsync()
    {
        archivos = await ArchivoService.ObtenerArchivosPorCursoAsync(CodigoCurso);
    }

    void ShowContextMenu(MouseEventArgs e, Archivo archivo)
    {
        

        ContextMenuService.Open(e, new List<ContextMenuItem>
        {
            new ContextMenuItem { Text = "Crear Carpeta", Value = "crearCarpeta", Icon = "folder" },
            new ContextMenuItem { Text = "Subir Carpeta", Value = "subirCarpeta", Icon = "upload" },
            new ContextMenuItem { Text = "Subir Archivo", Value = "subirArchivo", Icon = "file_upload" }
        }, OnMenuItemClick);

        
    }

    void OnMenuItemClick(MenuItemEventArgs args)
    {
        if (args.Value?.ToString() == "crearCarpeta")
        {
            CrearCarpeta();
        }
        else if (args.Value?.ToString() == "subirCarpeta")
        {
            SubirCarpeta();
        }
        else if (args.Value?.ToString() == "subirArchivo")
        {
            SubirArchivo();
        }

        ContextMenuService.Close(); 
    }

    void CrearCarpeta()
    {
        
    }

    void SubirCarpeta()
    {
        
    }

    void SubirArchivo()
    {
        
    }

    
}
