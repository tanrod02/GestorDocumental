@page "/"
@page "/{CodigoCurso:int}"
@using GestorDocumental.Business.Interfaces
@using GestorDocumental.Data.Entities
@using Radzen
@using Microsoft.AspNetCore.Components.Forms
@using GestorDocumental.Components.Pages

@inject IArchivoService ArchivoService
@inject DialogService DialogService

<PageTitle>Documentos</PageTitle>

<h1>Documentos</h1>

@if (archivos == null)
{
    <p>Cargando archivos...</p>
}
else if (!archivos.Any())
{
    <p>Bienvenido. Selecciona el curso para ver los documentos.</p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Nombre</th>
                <th>Tipo</th>
                <th>Fecha Alta</th>
                <th>Etiquetas</th>
                <th>Visible</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var archivo in archivos)
            {
                <tr>
                    <td>@archivo.NombreArchivo</td>
                    <td>@archivo.Tipo</td>
                    <td>@archivo.FechaAlta.ToString("dd/MM/yyyy")</td>
                    <td>@archivo.Etiquetas</td>
                    <td>@(archivo.Visible ?? false ? "Sí" : "No")</td>
                </tr>
            }
        </tbody>
    </table>

    <button class="floating-button" @onclick="AbrirDialogoSubida">
        📤 Subir Documento
    </button>

}

<RadzenDialog />

@code {
    [Parameter] public int CodigoCurso { get; set; }
    private IEnumerable<Archivo> archivos = new List<Archivo>();

    protected override async Task OnParametersSetAsync()
    {
        archivos = await ArchivoService.ObtenerArchivosPorCursoAsync(CodigoCurso);
        StateHasChanged();
    }

    async Task AbrirDialogoSubida()
    {
        Console.WriteLine("Abriendo dialogo subuda");

        var resultado = await DialogService.OpenAsync<SubirArchivoDialog>(
            "Subir Documento",
            new Dictionary<string, object>(), // Puedes pasar parámetros si es necesario
            new DialogOptions
                {
                    Resizable = true,
                    Draggable = true
                }
        );

        if (resultado != null)
        {
            Console.WriteLine("Diálogo cerrado con éxito.");
        }
    }



}
