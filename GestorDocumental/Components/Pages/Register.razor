@page "/register"
@using GestorDocumental.Business.Interfaces
@using GestorDocumental.Data.Entities
@inject IUsuarioService UsuarioService
@inject ICursoService CursoService
@inject IGrupoService GrupoService
@inject NavigationManager Navigation
@inject AuthService AuthenticationService
@rendermode InteractiveServer

<div class="login-background">
    <div class="card login-card">
        <h3 class="text-center">Registro de Usuario</h3>

        @if (!string.IsNullOrEmpty(Mensaje))
        {
            <div class="alert alert-danger text-center">@Mensaje</div>
        }

        <EditForm EditContext="@editContext" OnValidSubmit="RegistrarUsuario">
            <DataAnnotationsValidator />

            <!-- Nombre -->
            <div class="mb-3">
                <label for="nombre" class="form-label">Nombre:</label>
                <InputText id="nombre" class="form-control"
                @bind-Value="nuevoUsuario.Nombre" />
                <ValidationMessage For="@(() => nuevoUsuario.Nombre)"
                class="text-danger" />
            </div>

            <!-- Apellidos -->
            <div class="mb-3">
                <label for="apellido1" class="form-label">Primer apellido:</label>
                <InputText id="apellido1" class="form-control"
                @bind-Value="nuevoUsuario.Apellido1" />
                <ValidationMessage For="@(() => nuevoUsuario.Apellido1)"
                class="text-danger" />
            </div>

            <div class="mb-3">
                <label for="apellido2" class="form-label">Segundo apellido:</label>
                <InputText id="apellido2" class="form-control"
                @bind-Value="nuevoUsuario.Apellido2" />
                <ValidationMessage For="@(() => nuevoUsuario.Apellido2)"
                class="text-danger" />
            </div>

            <!-- Correo -->
            <div class="mb-3">
                <label for="correo" class="form-label">Correo:</label>
                <InputText id="correo" class="form-control"
                @bind-Value="nuevoUsuario.Correo" />
                <ValidationMessage For="@(() => nuevoUsuario.Correo)"
                class="text-danger" />
            </div>

            <!-- Contraseña -->
            <div class="mb-3">
                <label for="contraseña" class="form-label">Contraseña:</label>
                <div class="input-group">
                    <InputText id="contraseña"
                    type="@contraseñaTipo"
                    class="form-control"
                    @bind-Value="nuevoUsuario.Contraseña" />
                    <button type="button"
                    class="btn btn-outline-secondary"
                    @onclick="TogglePasswordVisibility">
                        <i class="bi @iconoOjo"></i>
                    </button>
                </div>
                <ValidationMessage For="@(() => nuevoUsuario.Contraseña)"
                class="text-danger" />
            </div>

            <!-- Combo Grupo -->
            <div class="mb-3">
                <label for="grupo" class="form-label">Grupo:</label>
                <InputSelect id="grupo"
                class="form-select"
                @bind-Value="nuevoUsuario.Grupo"
                disabled="@(Grupos == null || !Grupos.Any())">
                    <option value="">-- Seleccione un grupo --</option>
                    @foreach (var g in Grupos)
                    {
                        <option value="@g">@g</option>
                    }
                </InputSelect>
                <ValidationMessage For="@(() => nuevoUsuario.Grupo)"
                class="text-danger" />
            </div>

            <!-- Botón Registrar -->
            <div class="d-grid">
                <button type="submit" class="btn btn-primary">
                    Registrarse
                </button>
            </div>
        </EditForm>

        <div class="text-center mt-3">
            <span>¿Ya tienes una cuenta? </span>
            <a href="" class="text-primary" style="cursor: pointer;">
                Inicia sesión aquí
            </a>
        </div>
    </div>
</div>

@code {
    private Usuario nuevoUsuario;
    private EditContext editContext;
    private string Mensaje = "";
    private string contraseñaTipo = "password";
    private string iconoOjo = "bi-eye-slash";

    private List<Curso> Cursos = new();
    private List<string> Grupos = new();

    int codigoCurso;

    protected override async Task OnInitializedAsync()
    {
        nuevoUsuario = new Usuario();
        editContext = new EditContext(nuevoUsuario);

        Grupos = await GrupoService.ObtenerGrupos();

    }

    private void TogglePasswordVisibility()
    {
        if (contraseñaTipo == "password")
        {
            contraseñaTipo = "text";
            iconoOjo = "bi-eye";
        }
        else
        {
            contraseñaTipo = "password";
            iconoOjo = "bi-eye-slash";
        }
    }

    private async Task RegistrarUsuario()
    {
        if (!editContext.Validate())
            return;

        var registrado = await UsuarioService.RegistrarUsuarioAsync(nuevoUsuario);

        await CursoService.AgregarRelacionUsuarioGrupo(nuevoUsuario.CodigoUsuario, Convert.ToString(nuevoUsuario.Grupo));

        if (registrado)
        {
            Mensaje = "Usuario registrado exitosamente";
            Navigation.NavigateTo("/");
        }
        else
        {
            Mensaje = "El correo ya está en uso";
        }
    }
}
