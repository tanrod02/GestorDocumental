@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.Components.Forms
@using GestorDocumental.Business.Interfaces
@using GestorDocumental.Data.Entities
@using Radzen
@using Radzen.Blazor
@inject IArchivoService ArchivoService
@inject DialogService DialogService
@rendermode InteractiveServer

<RadzenCard Style="padding: 20px; max-width: 600px; margin: auto;">
    <div style="display: flex; flex-direction: column; gap: 15px;">
        <div>
            <label><b>Nombre del documento:</b></label>
            <p>@NombreArchivo</p>
        </div>

        <div>
            <label><b>Nº visitas:</b></label>
            <p>@estadisticasArchivo.NumeroVisitas</p>
        </div>

        <div>
            <label><b>Tiempo en documento:</b></label>
            <p>@estadisticasArchivo.TiempoEnDocumento</p>
        </div>

        <div>
            <label><b>Fecha subida:</b></label>
            <p>@estadisticasArchivo.FechaSubida</p>
        </div>

        <div>
            <label><b>Último acceso:</b></label>
            <p>@estadisticasArchivo.FechaAcceso</p>
        </div>

        <div>
            <label><b>Propietario:</b></label>
            <p>@propietarioArchivo</p>
        </div>


        <div class="botones" style="display: flex; justify-content: flex-end;">
            <RadzenButton Text="Salir"
            ButtonStyle="ButtonStyle.Secondary"
            Click="Cancelar" />
        </div>
    </div>
</RadzenCard>

@code {
    RadzenUpload radzenUpload;

    [Parameter] public int CodigoArchivo { get; set; }
    [Parameter] public string NombreArchivo { get; set; }

    private EstadisticasArchivo estadisticasArchivo = new EstadisticasArchivo();
    private string propietarioArchivo;

    protected override async Task OnParametersSetAsync()
    {
        await CargarEstadisticas();

    }


    private async Task CargarEstadisticas()
    {
        try
        {
            if (CodigoArchivo != 0)
            {
                estadisticasArchivo = await ArchivoService.ObtenerEstadisticasArchivo(CodigoArchivo);
                propietarioArchivo = await ArchivoService.ObtenerInfoPropietario(CodigoArchivo);
            }
            StateHasChanged();
        }
        catch (Exception e)
        {
            Console.WriteLine($"Error en CargarEstadisticas: {e.Message}");
        }
    }

    private void Cancelar()
    {
        DialogService.Close(false);
    }
}

