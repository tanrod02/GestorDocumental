@page "/login"
@using GestorDocumental.Business.Services
@using GestorDocumental.Data.Entities
@inject AuthService AuthService
@inject NavigationManager Navigation

<div class="container d-flex justify-content-center align-items-center vh-100">
    <div class="card shadow p-4" style="width: 400px;">
        <h3 class="text-center">Iniciar Sesión</h3>

        @if (!string.IsNullOrEmpty(Mensaje))
        {
            <div class="alert alert-danger text-center">@Mensaje</div>
        }

        <EditForm Model="credenciales" OnValidSubmit="IniciarSesion">
            <DataAnnotationsValidator />
            <div class="mb-3">
                <label class="form-label">Correo:</label>
                <InputText @bind-Value="credenciales.Correo" class="form-control" />
            </div>
            <div class="mb-3">
                <label class="form-label">Contraseña:</label>
                <InputText @bind-Value="credenciales.Contraseña" Type="password" class="form-control" />
            </div>
            <div class="d-grid">
                <button type="submit" class="btn btn-primary">Ingresar</button>
            </div>
        </EditForm>

        <!-- Opción de Registro -->
        <div class="text-center mt-3">
            <span>¿No tienes cuenta? </span>
            <a href="register" class="text-primary" style="cursor: pointer;">Regístrate aquí</a>
        </div>
    </div>
</div>

@code {
    private Usuario credenciales = new();
    private string Mensaje = "";

    private async Task IniciarSesion()
    {
        var exito = await AuthService.LoginAsync(credenciales.Correo, credenciales.Contraseña);
        if (exito)
        {
            Mensaje = "Inicio de sesión exitoso";
            Navigation.NavigateTo("/"); // Redirigir a la página de inicio
        }
        else
        {
            Mensaje = "Credenciales incorrectas";
        }
    }
}
