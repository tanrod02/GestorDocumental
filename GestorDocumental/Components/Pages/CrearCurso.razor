@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.Components.Forms
@using GestorDocumental.Business.Interfaces
@using GestorDocumental.Data.Entities
@using Radzen
@using Radzen.Blazor
@inject ICursoService CursoService
@inject DialogService DialogService
@rendermode InteractiveServer

<RadzenCard Style="padding: 20px; max-width: 600px; margin: auto;">
    <div style="display: flex; flex-direction: column; gap: 15px;">
        <div>
            <label>Nombre del curso:</label>
            <RadzenTextBox @bind-Value="nombreCurso" Placeholder="Grupo" Style="width: 100%;" />
        </div>

        <div>
            <label>Grupo:</label>
            <RadzenTextBox @bind-Value="nombreGrupo" Placeholder="Grupo" Style="width: 100%;" />
        </div>

        <div class="botones" style="display: flex; justify-content: space-between;">
            <RadzenButton Text="Guardar"
            Click="ConfirmarSubida"
            ButtonStyle="ButtonStyle.Primary" />

            <RadzenButton Text="Cancelar"
            ButtonStyle="ButtonStyle.Secondary"
            Click="CancelarSubida" />
        </div>
    </div>
</RadzenCard>


@code {
    RadzenUpload upload;

    [Parameter] public int CodigoUsuario { get; set; }

    private Curso nuevoCurso = new() { };
    private string nombreCurso;
    private string nombreGrupo;

    private void OnProgress(UploadProgressArgs args)
    {
        StateHasChanged();
    }

    private void CancelarArchivo()
    {
        nuevoCurso = new Curso();
        StateHasChanged();
    }

    private async Task ConfirmarSubida()
    {
        nuevoCurso.Descripcion = nombreCurso;
        nuevoCurso.Grupo = nombreGrupo;

        await CursoService.AgregarCursoAsync(nuevoCurso);


        DialogService.Close(true);
    }

    private void CancelarSubida()
    {
        DialogService.Close(false);
    }
}
